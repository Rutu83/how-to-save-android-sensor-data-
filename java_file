package com.replace with your package.

import android.annotation.SuppressLint;
import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.hardware.Sensor;
import android.hardware.SensorEvent;
import android.hardware.SensorEventListener;
import android.hardware.SensorManager;

import android.os.Build;
import android.os.Bundle;
import android.os.Environment;
import android.os.Handler;
import android.os.IBinder;
import android.util.Log;
import android.view.View;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.Nullable;
import androidx.annotation.RequiresApi;
import androidx.appcompat.app.AppCompatActivity;


import com.getbase.floatingactionbutton.FloatingActionButton;
import com.opencsv.CSVWriter;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

import static java.lang.String.*;


public class MainActivity2<writetocsv> extends AppCompatActivity  implements  SensorEventListener  {
    private static final String TAG = "MainActivity2";  // here provide your activity 
    private android.hardware.SensorManager SensorManager;
    private Sensor accelerometer, MLight;
    TextView xValue, yValue, zValue, light;  // define the textview  



    private FileWriter writer;
    public  boolean save;
    public boolean stopbtn;
    private Handler mhandler = new Handler();

    FloatingActionButton btn1,btn2;  //here i used floating action button you can use your own buttons 
    private Object View;
    Calendar c=Calendar.getInstance();
    @SuppressLint("SetTextI18n")
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main2);   //decring the view of xml 
        xValue = findViewById(R.id.xValue);
        yValue = findViewById(R.id.yValue);
        zValue = findViewById(R.id.zValue);
        light = findViewById(R.id.light);
        btn1= findViewById(R.id.first);
        btn2= findViewById(R.id.second);



        //Below code is start button listener

        btn1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(android.view.View v) {
                save=true;
                callread();

            }
        });

        //below code is stop button listener
        // But this logic is not working  we need to stop the saving here so how can we i don't have any idea please make it.

        btn2.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(android.view.View v) {
                save=false;
                cheack();

            }
        });

        Log.d(TAG, "onCreate: Initializing Sensor services  ");
        SensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);
        accelerometer = SensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);

        if (accelerometer != null) {

            SensorManager.registerListener(MainActivity2.this, accelerometer, android.hardware.SensorManager.SENSOR_DELAY_NORMAL);
            Log.d(TAG, "onCreate: Registered accelerometer listener ");
        } else {
            xValue.setText("Accelerometer is not supported");
        }
        MLight = SensorManager.getDefaultSensor(Sensor.TYPE_LIGHT);
        if (MLight != null) {
            SensorManager.registerListener(MainActivity2.this, MLight, android.hardware.SensorManager.SENSOR_DELAY_NORMAL);
            Log.d(TAG, "onCreate: Registered Light listener ");
        } else {
            light.setText("Light is not supported");


        }
    }

    public void callread() {

        Toast.makeText(this, "file saved successfully ", Toast.LENGTH_SHORT).show();

    }

    public void error() {

        Toast.makeText(this, "Error while saving file! ", Toast.LENGTH_SHORT).show();
    }
    @SuppressLint("SetTextI18n")
    @Override
    public void onSensorChanged(SensorEvent SensorEvent) {
        Sensor sensor = SensorEvent.sensor;
        //This is critical code do not change here
        if (sensor.getType() == Sensor.TYPE_ACCELEROMETER) {
            Log.d(TAG, "onSensorChanged: X:" + SensorEvent.values[0] + "Y" + SensorEvent.values[1] + "Z" + SensorEvent.values[2]);
            xValue.setText("valuex:" + SensorEvent.values[0]);
            yValue.setText("valuey:" + SensorEvent.values[1]);
            zValue.setText("valuez:" + SensorEvent.values[2]);

        } else if (sensor.getType() == Sensor.TYPE_LIGHT) {
            light.setText("Light Lux:" + SensorEvent.values[0]);


        }

        //This code is responsible for saving into external storage.(**)

         if(save==true){   // this if  is for start button saving (floating button image save)

             //below code is responsible for saving as time data and month............
             int day,month,year,hr,min,sec;
             String date,time;
             day=c.get(Calendar.DAY_OF_MONTH);
             month=c.get(Calendar.MONTH);
             year=c.get(Calendar.YEAR);
             hr=c.get(Calendar.HOUR_OF_DAY);
             min=c.get(Calendar.MINUTE);
             sec=c.get(Calendar.SECOND);
             time = hr+"-"+min+"-"+sec;
             date=day+"-"+month+"-"+year+"-"+time;
             String folder_main = "Sensor_Data";
             startService(new Intent(getApplicationContext(),backgorund.class));
             File f = new File(Environment.getExternalStorageDirectory(),folder_main);
             if (!f.exists()) {
                 f.mkdirs();

             }
             String csv = (Environment.getExternalStorageDirectory() +"/"+folder_main +"/"+date+"_sensor_data.csv"); //here  you can change the extension whatever you want means text and csv
             CSVWriter writer = null;
            try {
                writer = new CSVWriter(new FileWriter(csv ,true));
                List<String[]> data = new ArrayList<String[]>();
                data.add(new String[]{"*********************"});
                data.add(new String[]{valueOf(xValue.getText())});
                data.add(new String[]{valueOf(yValue.getText())});
                data.add(new String[]{valueOf(zValue.getText())});
                data.add(new String[]{valueOf(light.getText())});
                //writer.writeNext((new String[]{new String[]{new StringBuilder().append(xValue.getText()).append(", \n").append(yValue.getText()).append(",\n").append(zValue.getText()).append("\n").toString()}); /* taking x y z values as array..\
                writer.writeAll(data); // data is adding to csv

                writer.close();
            } catch (IOException  e) {
                error();
                e.printStackTrace();
            }
            // i have wrote this but this is not working i don't know

        }   // Ending of if of stop button


    }


    @Override
    public void onAccuracyChanged(Sensor sensor, int accuracy) {


    }
    public void cheack(){

        Toast.makeText(this,"stop button worked",Toast.LENGTH_SHORT).show();
        finish();

    }





}




